declare namespace R {
    export const L: string;
    export { e as P };
    export { o as V };
    export const I: number;
    export { C as N };
    export { V as R };
    export { u as j };
    export { P as D };
    export { N as H };
    export { S as F };
    export { H as O };
    export { I as W };
    export { M as B };
    export { L as Z };
}
declare function $(i: any, ...s: any[]): {
    _$litType$: any;
    strings: any;
    values: any[];
};
declare const b: unique symbol;
declare const w: unique symbol;
declare function x(t: any, i: any, s: any): any;
declare function y(i: any, ...s: any[]): {
    _$litType$: any;
    strings: any;
    values: any[];
};
declare const e: string;
declare const o: string;
declare function C(t: any, i: any): any[];
declare class V {
    constructor(t: any, i: any);
    v: any[];
    _$AD: any;
    _$AM: any;
    get parentNode(): any;
    get _$AU(): any;
    p(t: any): any;
    m(t: any): void;
}
declare function u(t: any): boolean;
declare function P(t: any, i: any, s: any, e: any): any;
declare class N {
    constructor(t: any, i: any, s: any, e: any);
    type: number;
    _$AH: typeof w;
    _$AA: any;
    _$AB: any;
    _$AM: any;
    options: any;
    _$Cg: any;
    get _$AU(): any;
    get parentNode(): any;
    get startNode(): any;
    get endNode(): any;
    _$AI(t: any, i?: N): void;
    M(t: any, i?: any): any;
    k(t: any): void;
    $(t: any): void;
    T(t: any): void;
    _$AC(t: any): any;
    S(t: any): void;
    _$AR(t: any, i: any): void;
    setConnected(t: any): void;
}
declare class S {
    constructor(t: any, i: any, s: any, e: any, o: any);
    type: number;
    _$AH: any[] | typeof w;
    element: any;
    name: any;
    _$AM: any;
    options: any;
    strings: any;
    get tagName(): any;
    get _$AU(): any;
    _$AI(t: any, i: S, s: any, e: any): void;
    C(t: any): void;
}
declare class H extends S {
    constructor(...args: any[]);
}
declare class I_1 extends S {
    _$AI(t: any, i?: I): void;
    handleEvent(t: any): void;
}
declare class M extends S {
    constructor(...args: any[]);
}
declare class L_1 {
    constructor(t: any, i: any, s: any);
    element: any;
    type: number;
    _$AM: any;
    options: any;
    get _$AU(): any;
    _$AI(t: any): void;
}
export { R as _$LH, $ as html, b as noChange, w as nothing, x as render, y as svg };
